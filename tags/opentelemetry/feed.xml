
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Jayground8</title>
      <link>https://jayground8.github.io/blog</link>
      <description>like playing in the playground</description>
      <language>kr</language>
      <managingEditor>jayground8@gmail.com (Jay)</managingEditor>
      <webMaster>jayground8@gmail.com (Jay)</webMaster>
      <lastBuildDate>Sun, 26 May 2024 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://jayground8.github.io/tags/opentelemetry/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://jayground8.github.io/blog/20240526-otel-operator</guid>
    <title>opentelemetry-operator 사용해보기</title>
    <link>https://jayground8.github.io/blog/20240526-otel-operator</link>
    <description>소스코드를 변경하지 않고 opentelemetry-operator의 Instrumentation CRD를 통해서 Python Application을 자동으로 Instrumentation을 해봤다. 이 과정에서 OpenTelemetry Logging의 경우에는 기존 Logging Libarary에 Bridge API로 연동하는 구조로 설계된 것을 알게 되었고, Python opentelemetry sdk가 logger에 handler를 추가하는 것을 알게 되었다. 또한 sitecustomize.py을 통해서 Python Application이 실행되기 전에 Instrumentation library를 셋팅하는 것을 이해하게 되었다. Gunicorn으로 Flask를 실행할 때와 Uvicorn으로 FastAPI를 실행할 때, Auto Instrumentation이 잘 되는 것을 확인하였다.</description>
    <pubDate>Sun, 26 May 2024 00:00:00 GMT</pubDate>
    <author>jayground8@gmail.com (Jay)</author>
    <category>kubernetes</category><category>opentelemetry</category>
  </item>

  <item>
    <guid>https://jayground8.github.io/blog/20240501-opentelemetry-syslog</guid>
    <title>OpenTelmetry로 auth.log와 syslog 수집하기</title>
    <link>https://jayground8.github.io/blog/20240501-opentelemetry-syslog</link>
    <description>Ubuntu 20.04 서버의 auth.log, syslog 로그 값들을 OpenTelemetry를 통해서 수집하고 싶었다. 처음에는 Filelog Receiver를 통해서 수집하려고 하였고, rsyslog의 설정값을 변경하여 Filelog로 수집하도록 구성했다. 그런데 이후에 Syslog Receiver가 존재하는 것을 확인하게 되었고, 훨씬 간단하게 syslog를 수집할 수 있었다.</description>
    <pubDate>Wed, 01 May 2024 00:00:00 GMT</pubDate>
    <author>jayground8@gmail.com (Jay)</author>
    <category>kubernetes</category><category>opentelemetry</category><category>devsecops</category>
  </item>

  <item>
    <guid>https://jayground8.github.io/blog/20231231-open-telemetry</guid>
    <title>OpenTelemetry with Minikube</title>
    <link>https://jayground8.github.io/blog/20231231-open-telemetry</link>
    <description>OpenTelemetry collector를 사용하여 tracing과 logging을 같이 하는 것을 검토하였다. Kubernetes와 멀어져 있던 사이에 OpenTelemetry 커뮤니티가 엄청나게 성장한 것을 깨닫게 되었다. Log에 traceID를 남기고 그걸로 Tracing 정보를 볼 수 있도록 구성했고, Grafana 하나에서 통합적으로 볼 수 있도록 Loki와 Tempo를 Exporter로 사용했다. 아직 Python과 Nodejs에서는 Log쪽의 상태는 Development나 Experimental이기 때문에, receiver에서 filelog를 사용하여 Kubernetes log file을 fluentbit처럼 tail해서 가져오고 traceId를 log에 넣어주는 instrument libary를 사용했다.</description>
    <pubDate>Sun, 31 Dec 2023 00:00:00 GMT</pubDate>
    <author>jayground8@gmail.com (Jay)</author>
    <category>opentelemetry</category><category>kubernetes</category>
  </item>

    </channel>
  </rss>
