{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var o=Object.create;var l=Object.defineProperty;var t=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var c=a=>l(a,\"__esModule\",{value:!0});var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),u=(a,s)=>{c(a);for(var i in s)l(a,i,{get:s[i],enumerable:!0})},b=(a,s,i)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let n of h(s))!m.call(a,n)&&n!==\"default\"&&l(a,n,{get:()=>s[n],enumerable:!(i=t(s,n))||i.enumerable});return a},g=a=>b(c(l(a!=null?o(p(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var r=N((O,d)=>{d.exports=_jsx_runtime});var y={};u(y,{default:()=>_,frontmatter:()=>k});var e=g(r()),k={title:\"Understanding how to build Bitnami Mindeb image and Google Distroless image\",date:\"2025-08-24\",tags:[\"bazel\",\"security\"],images:[\"/static/images/thumbnail/distroless.png\"],summary:\"Recently, Bitnami announced that secure container images would only be available under a paid plan, and that they would stop maintaining most of their previous images, except for a few open-source projects. Bitnami container images are based on the minideb image, which includes fewer packages than a standard Debian image. I started wondering whether I could replace this with a Distroless image built using Bazel and maintain it myself.This blog explains how minideb and Distroless images are built.\"};function f(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(i,{})})):i();function i(){let n=Object.assign({p:\"p\",h2:\"h2\",a:\"a\",span:\"span\",pre:\"pre\",code:\"code\",h3:\"h3\",ul:\"ul\",li:\"li\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"I use Distroless images as the base for my applications. Distroless images not only reduce the overall container size but also minimize the surface area for security vulnerabilities. Last year, I briefly explored how Bazel works in order to add a package to a Distroless image, since some applications required additional Debian packages.\"}),(0,e.jsx)(n.p,{children:\"Recently, Bitnami announced that secure container images will only be available under a paid plan, and that they would stop maintaining most of their previous images except for a few open-source projects. That made me wonder: Would it be possible to replace all Bitnami container images with Distroless as the base? That\\u2019s where this journey began.\"}),(0,e.jsx)(n.p,{children:\"To meet security requirements in the past, I often had to modify Dockerfiles from open-source projects and rebuild the images myself. I also needed to review all containers to ensure they passed security compliance checks and report on them regularly. It was a tedious and repetitive job. With Distroless images, however, much of that effort can be avoided. Since Distroless does not even include a shell by default, direct container access is restricted\\u2014and in many cases, that alone allows you to bypass a number of security compliance checks.\"}),(0,e.jsxs)(n.h2,{id:\"understanding-bitnami-mindeb-image\",children:[(0,e.jsx)(n.a,{href:\"#understanding-bitnami-mindeb-image\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Understanding Bitnami Mindeb Image\"]}),(0,e.jsxs)(n.p,{children:[\"Bitnami Images use \",(0,e.jsx)(n.a,{href:\"https://github.com/bitnami/minideb\",children:\"minideb image\"}),\" as their base image. Let\\u2019s take a closer look at how a minideb base image can be built.\"]}),(0,e.jsx)(n.p,{children:\"Before that, it\\u2019s important to understand what the debootstrap package does. The debootstrap package allows you to create minimal Debian base systems. For example, you can quickly build a Debian-based container image using Docker and debootstrap on Ubuntu:\"}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`apt install debootstrap\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`DEBOOTSTRAP_DIR=$(mktemp -d)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`sudo debootstrap --variant=minbase --arch=amd64 trixie $DEBOOTSTRAP_DIR\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`sudo tar -C $DEBOOTSTRAP_DIR -cf - . | docker import - debian:stable\n`})]})}),(0,e.jsx)(n.p,{children:\"Now you\\u2019ve generated a Debian container image. You can check the Debian version inside the container:\"}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`$ docker run -it debian:stable cat /etc/debian_version\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`13.0\n`})]})}),(0,e.jsxs)(n.h3,{id:\"which-packages-get-installed-during-debootstrap\",children:[(0,e.jsx)(n.a,{href:\"#which-packages-get-installed-during-debootstrap\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Which packages get installed during debootstrap?\"]}),(0,e.jsx)(n.p,{children:\"The installation process is defined by predefined debootstrap scripts. For example, if you\\u2019re using the current stable release Trixie, you can find its script at:\"}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsx)(n.code,{className:\"code-highlight language-bash\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"cat\"}),` /usr/share/debootstrap/scripts/trixie\n`]})})}),(0,e.jsx)(n.p,{children:\"In fact, the scripts for Bookworm, Bullseye, and Trixie all point to a shared script called debian-common:\"}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-bash\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`mirror_style release\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"download_style \",(0,e.jsx)(n.span,{className:\"token function\",children:\"apt\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`finddebs_style from-indices\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`variants - buildd fakechroot minbase\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`keyring /usr/share/keyrings/debian-archive-keyring.gpg\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# include common settings\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\" -e \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'/scripts/debian-common\"']}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"then\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\".\"}),\" \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'/scripts/debian-common\"']}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\" -e /debootstrap/debian-common \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"then\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\".\"}),` /debootstrap/debian-common\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\" -e \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'/debian-common\"']}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"then\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\".\"}),\" \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'/debian-common\"']}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"else\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" error \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),\" NOCOMMON \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"File not found: debian-common\"'}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"fi\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"Inside \",(0,e.jsx)(n.code,{children:\"debian-common\"}),\", you\\u2019ll find three main functions. In short, they download Debian packages and initialize the system configuration:\"]}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-bash\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"$ \",(0,e.jsx)(n.span,{className:\"token function\",children:\"cat\"}),` /usr/share/debootstrap/scripts/debian-common\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function function-name\",children:\"work_out_debs\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function function-name\",children:\"first_stage_install\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function function-name\",children:\"second_stage_install\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsxs)(n.h3,{id:\"the-work_out_debs-function\",children:[(0,e.jsx)(n.a,{href:\"#the-work_out_debs-function\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"The work_out_debs function\"]}),(0,e.jsx)(n.p,{children:\"The key part is the work_out_debs function, which determines which packages get installed. By default, it selects all Debian packages with the required priority:\"}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsx)(n.code,{className:\"code-highlight language-bash\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token variable assign-left\",children:\"required\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsxs)(n.span,{className:\"token variable\",children:[(0,e.jsx)(n.span,{className:\"token variable\",children:\"$(\"}),\"get_debs Priority: required\",(0,e.jsx)(n.span,{className:\"token variable\",children:\")\"})]}),'\"']}),`\n`]})})}),(0,e.jsx)(n.p,{children:\"For example, you can check the priority of the bash package:\"}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-bash\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"$ \",(0,e.jsx)(n.span,{className:\"token function\",children:\"apt-cache\"}),\" show \",(0,e.jsx)(n.span,{className:\"token function\",children:\"bash\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Package: \",(0,e.jsx)(n.span,{className:\"token function\",children:\"bash\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Architecture: amd64\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Version: \",(0,e.jsx)(n.span,{className:\"token number\",children:\"5.2\"}),`.21-2ubuntu4\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Multi-Arch: foreign\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Priority: required\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Essential: \",(0,e.jsx)(n.span,{className:\"token function\",children:\"yes\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Section: shells\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Origin: Ubuntu\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Maintainer: Ubuntu Developers \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"ubuntu-devel-discuss@lists.ubuntu.com\",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Original-Maintainer: Matthias Klose \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"doko@debian.org\",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Bugs: https://bugs.launchpad.net/ubuntu/+filebug\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Installed-Size: \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1900\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Pre-Depends: libc6 \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2.38\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\", libtinfo6 \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"6\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Depends: base-files \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2.1\"}),\".12\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\", debianutils \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"5.6\"}),\"-0.1\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Recommends: bash-completion\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Suggests: bash-doc\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Filename: pool/main/b/bash/bash_5.2.21-2ubuntu4_amd64.deb\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Size: \",(0,e.jsx)(n.span,{className:\"token number\",children:\"794086\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`MD5sum: 627cdbb775b1a60dadd502e96e0426b1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`SHA1: 8065b79389fc555b38cf71e297a259773b09c38e\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`SHA256: 73de311a21e094e29ac01527d2b52226cc87fde0a5b57032902251b426d92c66\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`SHA512: c14c2c8fa0d1ae7530efa0375845257b4ec0baa5bc42982efca2d7fa860b4e4ea3f04d31cfa328d2f250b2baeac3795c8b31aa5ff2d514ed16a5cf8c3132a590\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Homepage: http://tiswww.case.edu/php/chet/bash/bashtop.html\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Description-en: GNU Bourne Again SHell\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" Bash is an sh-compatible \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\"command\"}),` language interpreter that executes\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" commands \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\"read\"}),` from the standard input or from a file.  Bash also\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" incorporates useful features from the Korn and C shells \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"ksh and csh\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`.\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\".\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:` Bash is ultimately intended to be a conformant implementation of the\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" IEEE POSIX Shell and Tools specification \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"IEEE Working Group \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1003.2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`.\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\".\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" The Programmable Completion Code, by Ian Macdonald, is now found \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:` the bash-completion package.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Description-md5: 3522aa7b4374048d6450e348a5bb45d9\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Task: minimal\n`})]})}),(0,e.jsx)(n.p,{children:\"Since bash is marked as required, you can expect it to be installed during debootstrap initialization.\"}),(0,e.jsxs)(n.h3,{id:\"bitnamis-customization\",children:[(0,e.jsx)(n.a,{href:\"#bitnamis-customization\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Bitnami\\u2019s customization\"]}),(0,e.jsxs)(n.p,{children:[\"Bitnami overrides the default debootstrap script to better suit container image generation. \",(0,e.jsx)(n.a,{href:\"https://github.com/bitnami/minideb/blob/master/debootstrap/bullseye\",children:\"Here\\u2019s their version for Bullseye.\"})]}),(0,e.jsx)(n.p,{children:\"In their script, the required variable explicitly lists which Debian packages should be included:\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"debootstrap/bullseye\"})}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-bash\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`mirror_style release\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"download_style \",(0,e.jsx)(n.span,{className:\"token function\",children:\"apt\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`finddebs_style from-indices\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`variants - container fakechroot\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`keyring /usr/share/keyrings/debian-archive-keyring.gpg\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function function-name\",children:\"work_out_debs\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token variable assign-left\",children:\"required\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"adduser base-files base-passwd bash bsdutils coreutils dash debian-archive-keyring diffutils dpkg findutils grep gzip hostname init-system-helpers libc-bin login lsb-base mawk ncurses-base passwd sed sysv-rc tar tzdata util-linux mount\"'}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsx)(n.p,{children:\"This is why their build script copies these custom files into the DEBOOTSTRAP_DIR and sets the --variant=container flag when running debootstrap:\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"mkimage\"})}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-bash\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token variable assign-left\",children:\"DEBOOTSTRAP_DIR\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsxs)(n.span,{className:\"token variable\",children:[(0,e.jsx)(n.span,{className:\"token variable\",children:\"$(\"}),\"mktemp -d\",(0,e.jsx)(n.span,{className:\"token variable\",children:\")\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"cp\"}),\" -a /usr/share/debootstrap/* \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'\"']}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"cp\"}),\" -a /usr/share/keyrings/debian-archive-keyring.gpg \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'\"']}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"cp\"}),\" -a \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"${ROOT}\"}),'/debootstrap/\"']}),\"* \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"${DEBOOTSTRAP_DIR}\"}),'/scripts\"']}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"..\"}),`.\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token variable assign-left\",children:\"DEBOOTSTRAP_DIR\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$DEBOOTSTRAP_DIR\"}),'\"']}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"debootstrap\"}),\" \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsxs)(n.span,{className:\"token variable\",children:[\"${debootstrap_arch_args\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"@\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\"}\"]}),'\"']}),\"  --keyring \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$KEYRING\"}),'\"']}),\" --variant container --foreign \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"${DIST}\"}),'\"']}),\" \",(0,e.jsxs)(n.span,{className:\"token string\",children:['\"',(0,e.jsx)(n.span,{className:\"token variable\",children:\"$rootfsDir\"}),'\"']}),`\n`]})]})}),(0,e.jsxs)(n.h2,{id:\"understanding-distroless-image\",children:[(0,e.jsx)(n.a,{href:\"#understanding-distroless-image\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Understanding Distroless Image\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/jayground8/example-bazel\",children:\"Example Source Code\"})}),(0,e.jsx)(n.p,{children:\"This time, let\\u2019s take a closer look at how a Distroless image can be built with Bazel. I\\u2019ll be using Bazelisk to run Bazel.\"}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`sudo curl -o /usr/bin/bazelisk -L https://github.com/bazelbuild/bazelisk/releases/download/v1.27.0/bazelisk-linux-amd64\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`sudo chmod a+x /usr/bin/bazelisk\n`})]})}),(0,e.jsx)(n.p,{children:\"You can specify the version of Bazel you want to use in the .bazelversion file. Bazelisk automatically sets up the specified version and runs Bazel commands. I set it to the latest version at the time of writing:\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\".bazelversion\"})}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight language-sh\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`8.3.1\n`})})}),(0,e.jsxs)(n.h3,{id:\"setting-up-the-bazel-workspace\",children:[(0,e.jsx)(n.a,{href:\"#setting-up-the-bazel-workspace\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Setting up the Bazel workspace\"]}),(0,e.jsx)(n.p,{children:\"Bazel requires a specific workspace structure. First, you need to add a MODULE.bazel file at the root of your project. In this file, you can declare external dependencies using predefined methods. In the examples below, we\\u2019ll use three methods:\"}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:\"bazel_dep\"}),(0,e.jsx)(n.li,{children:\"use_extension\"}),(0,e.jsx)(n.li,{children:\"use_repo\"})]}),(0,e.jsxs)(n.p,{children:[\"Here\\u2019s an example \",(0,e.jsx)(n.code,{children:\"MODULE.bazel\"}),\" file:\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"MODULE.bazel\"})}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`bazel_dep(name = \"aspect_bazel_lib\", version = \"2.21.1\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`bazel_dep(name = \"rules_oci\", version = \"2.2.6\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`bazel_dep(name = \"rules_distroless\", version = \"0.5.3\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`apt = use_extension(\"@rules_distroless//apt:extensions.bzl\", \"apt\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`REPO = \"trixie\"\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`apt.install(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    name = REPO,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    lock = \"//:{}.lock.json\".format(REPO),\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    manifest = \"//:{}.yaml\".format(REPO),\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    resolve_transitive = False,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    mergedusr = True,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`use_repo(apt, REPO)\n`})]})}),(0,e.jsxs)(n.h3,{id:\"external-bazel-modules\",children:[(0,e.jsx)(n.a,{href:\"#external-bazel-modules\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"External Bazel modules\"]}),(0,e.jsxs)(n.p,{children:[\"The \",(0,e.jsx)(n.a,{href:\"https://registry.bazel.build/\",children:\"Bazel Centry Registry\"}),\" hosts external Bazel modules. You can use \",(0,e.jsx)(n.code,{children:\"bazel_dep\"}),\" to declare which version of each external module you want to use. In this example, we\\u2019re using three modules:\"]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`bazel_dep(name = \"aspect_bazel_lib\", version = \"2.21.1\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`bazel_dep(name = \"rules_oci\", version = \"2.2.6\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`bazel_dep(name = \"rules_distroless\", version = \"0.5.3\")\n`})]})}),(0,e.jsxs)(n.h3,{id:\"configuring-debian-repositories\",children:[(0,e.jsx)(n.a,{href:\"#configuring-debian-repositories\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Configuring Debian repositories\"]}),(0,e.jsx)(n.p,{children:\"Next, let\\u2019s configure the Debian repositories and packages to be installed in the Distroless image. We\\u2019ll use two methods:\"}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:\"use_extension\"}),(0,e.jsx)(n.li,{children:\"use_repo.\"})]}),(0,e.jsx)(n.p,{children:\"Here, we configure only the current Debian stable release:\"}),(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-bash\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"apt\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" use_extension\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"@rules_distroless//apt:extensions.bzl\"'}),\", \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"apt\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"REPO \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"trixie\"'}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"apt.install\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    name \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),` REPO,\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    lock \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"//:{}.lock.json\"'}),\".format\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"REPO\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`,\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    manifest \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"//:{}.yaml\"'}),\".format\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"REPO\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`,\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    resolve_transitive \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),` False,\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    mergedusr \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),` True,\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"use_repo\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"apt, REPO\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"The \",(0,e.jsx)(n.code,{children:\"trixie.lock.json\"}),\" file specifies the exact package versions you want installed. For example, the latest version of ca-certificates in Debian Trixie is \",(0,e.jsx)(n.a,{href:\"https://packages.debian.org/trixie/ca-certificates\",children:\"20250419 at the time of writing\"}),\". If you need to patch vulnerabilities (CVEs), you\\u2019ll need to update this lock file.\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"trixie.lock.json\"})}),(0,e.jsx)(n.pre,{className:\"language-json\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-json\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"packages\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"arch\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"arm64\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"dependencies\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"key\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"ca-certificates_20250419_arm64\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"name\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"ca-certificates\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"sha256\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"ef590f89563aa4b46c8260d49d1cea0fc1b181d19e8df3782694706adf05c184\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"url\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"https://snapshot.debian.org/archive/debian/20250812T210203Z/pool/main/c/ca-certificates/ca-certificates_20250419_all.deb\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token property\",children:'\"version\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"20250419\"'}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"I copied both \",(0,e.jsx)(n.code,{children:\"trixie.lock.json\"}),\" and \",(0,e.jsx)(n.code,{children:\"trixie.yaml\"}),\" \",(0,e.jsx)(n.a,{href:\"https://github.com/GoogleContainerTools/distroless/blob/0125c4d9736d0a4b037ba32d5107e9fac773d7ca/private/repos/deb/trixie.lock.json\",children:\"from the Distroless GitHub repo\"}),\". The \",(0,e.jsx)(n.code,{children:\"trixie.yaml\"}),\" file must follow the format described in \",(0,e.jsx)(n.a,{href:\"https://github.com/bazel-contrib/rules_distroless/blob/cd8abc5d1c25d4cb87e3f48390514a946aa715eb/docs/apt.md\",children:\"the rules_distroless documentation\"}),\".\"]}),(0,e.jsxs)(n.h3,{id:\"defining-the-base-image\",children:[(0,e.jsx)(n.a,{href:\"#defining-the-base-image\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Defining the base image\"]}),(0,e.jsx)(n.p,{children:\"Now, let\\u2019s write a base.bzl file to define the base image using our external modules.\"}),(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"aspect_bazel_lib\"}),\" is used to create tar files.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"rules_distroless\"}),\" is used to define the Debian filesystem.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"rules_oci\"}),\" is used to build the final OCI container images.\"]})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"bazel.bzl\"})}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`load(\"@aspect_bazel_lib//lib:tar.bzl\", \"tar\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`load(\"@rules_distroless//distroless:defs.bzl\", \"cacerts\", \"group\", \"home\", \"locale\", \"os_release\", \"passwd\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`load(\"@rules_oci//oci:defs.bzl\", \"oci_image\", \"oci_image_index\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`load(\":variables.bzl\", \"MTIME\", \"NOBODY\", \"NONROOT\", \"ROOT\", \"USER_VARIANTS\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`def base_image():\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    tar(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"rootfs\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        srcs = [],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        args = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"--format\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"gnutar\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        compress = \"gzip\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        mtree = [\"./ type=dir uid=0 gid=0 time=0.0\"],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    tar(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"tmp\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        srcs = [],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        # original tmp.tar was created on a gnutar, mimic that.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        args = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"--format\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"gnutar\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        compress = \"gzip\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        mtree = [\"./tmp gname=root uname=root time=1501783453.0 mode=1777 gid=0 uid=0 type=dir\"],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    os_release(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"os_release_debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        content = {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"PRETTY_NAME\": \"Distroless\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"NAME\": \"Debian GNU/Linux\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"ID\": \"debian\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"VERSION_ID\": \"13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            \"VERSION\": \"Debian GNU/Linux 13 (trixie)\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        time = MTIME,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    locale(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"locale_debian13_arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        charset = \"C.utf8\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        package = \"@trixie//libc-bin/arm64:data\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        time = MTIME,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    cacerts(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"cacerts_debian13_arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        package = \"@trixie//ca-certificates/arm64:data\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        time = MTIME,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    group(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"group\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        entries = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"name\": \"root\",  # root_group\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"name\": \"nobody\",  # nobody_group\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": NOBODY,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"name\": \"tty\",  # tty_group\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": 5,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"name\": \"staff\",  # staff_group\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": 50,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"name\": \"nonroot\",  # nonroot_group\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": NONROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        time = MTIME,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    passwd(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"passwd\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        entries = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gecos\": [\"root\"],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"shell\": \"/sbin/nologin\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"home\": \"/root\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"uid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"username\": \"root\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gecos\": [\"nobody\"],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": NOBODY,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"home\": \"/nonexistent\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"shell\": \"/sbin/nologin\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"uid\": NOBODY,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"username\": \"nobody\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gecos\": [\"nonroot\"],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": NONROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"home\": \"/home/nonroot\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"shell\": \"/sbin/nologin\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"uid\": NONROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"password\": \"x\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"username\": \"nonroot\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    home(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        name = \"home\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        dirs = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"home\": \"/root\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"uid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"mode\": 700,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"home\": \"/home\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"uid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": ROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"mode\": 755,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"home\": \"/home/nonroot\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"uid\": NONROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"gid\": NONROOT,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"mode\": 700,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    for (user, _, _) in USER_VARIANTS:\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        oci_image_index(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            name = \"static_\" + user + \"_\" + \"debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            images = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"static_\" + user + \"_\" + \"arm64\" + \"_\" + \"debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        )\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    for (user, uid, workdir) in USER_VARIANTS:\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        oci_image(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            name = \"static_\" + user + \"_\" + \"arm64\" + \"_\" + \"debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            env = {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"PATH\": \"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                # allows openssl to find the certificates by default\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                # TODO: We should run update-ca-certifaces, but that requires \"openssl rehash\"\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                # which would probably need to be run inside the container\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"SSL_CERT_FILE\": \"/etc/ssl/certs/ca-certificates.crt\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            tars = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"@trixie//base-files/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"@trixie//netbase/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"@trixie//tzdata/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"@trixie//media-types/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:rootfs\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:passwd\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:home\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:group\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                # Create /tmp, too many things assume it exists.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                # tmp.tar has a /tmp with the correct permissions 01777\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:tmp\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \":nsswitch.tar\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:os_release_\" + \"debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`                \"//:cacerts_\" + \"debian13\" + \"_\" + \"arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            user = \"%d\" % uid,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            workdir = workdir,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            os = \"linux\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`            architecture = \"arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        )\n`})]})}),(0,e.jsxs)(n.h3,{id:\"variables-file\",children:[(0,e.jsx)(n.a,{href:\"#variables-file\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Variables file\"]}),(0,e.jsxs)(n.p,{children:[\"You can keep constants and variables in a separate \",(0,e.jsx)(n.code,{children:\"{name}.bzl\"}),\" file and load them into your Bazel rules:\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"base.bzl\"})}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight language-sh\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`load(\":variables.bzl\", \"MTIME\", \"NOBODY\", \"NONROOT\", \"ROOT\", \"USER_VARIANTS\")\n`})})}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"variables.bzl\"})}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`NOBODY = 65534\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`NONROOT = 65532\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`ROOT = 0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`MTIME = \"946684800\"\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`USER_VARIANTS = [(\"root\", 0, \"/\"), (\"nonroot\", NONROOT, \"/home/nonroot\")]\n`})]})}),(0,e.jsxs)(n.h3,{id:\"adding-packages-to-the-image\",children:[(0,e.jsx)(n.a,{href:\"#adding-packages-to-the-image\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Adding packages to the image\"]}),(0,e.jsxs)(n.p,{children:[\"Since we already declared the Debian repositories in \",(0,e.jsx)(n.code,{children:\"MODULE.bazel\"}),\" with \",(0,e.jsx)(n.code,{children:\"rules_distroless\"}),\", you can add packages by referencing them like \",(0,e.jsx)(n.code,{children:\"@trixie//base-files/arm64\"}),\".\"]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`oci_image(\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    name = \"static_\" + user + \"_\" + \"arm64\" + \"_\" + \"debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    env = {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"PATH\": \"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        # allows openssl to find the certificates by default\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        # TODO: We should run update-ca-certifaces, but that requires \"openssl rehash\"\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        # which would probably need to be run inside the container\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"SSL_CERT_FILE\": \"/etc/ssl/certs/ca-certificates.crt\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    },\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    tars = [\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"@trixie//base-files/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"@trixie//netbase/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"@trixie//tzdata/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"@trixie//media-types/arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:rootfs\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:passwd\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:home\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:group\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        # Create /tmp, too many things assume it exists.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        # tmp.tar has a /tmp with the correct permissions 01777\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:tmp\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \":nsswitch.tar\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:os_release_\" + \"debian13\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        \"//:cacerts_\" + \"debian13\" + \"_\" + \"arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    ],\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    user = \"%d\" % uid,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    workdir = workdir,\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    os = \"linux\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    architecture = \"arm64\",\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`)\n`})]})}),(0,e.jsx)(n.p,{children:\"Interestingly, Bazel files allow for loops. This is useful, for example, when you want to build multiple images for different users or architectures:\"}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`def base_image():\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    ...\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    for (user, uid, workdir) in USER_VARIANTS:\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`        ...\n`})]})}),(0,e.jsxs)(n.h3,{id:\"build-file\",children:[(0,e.jsx)(n.a,{href:\"#build-file\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"BUILD file\"]}),(0,e.jsx)(n.p,{children:\"Finally, you need a BUILD file to wire everything together. Here, we import the function from base.bzl and call it:\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"BUILD\"})}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`load(\":base.bzl\", \"base_image\")\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`base_image()\n`})]})}),(0,e.jsxs)(n.h3,{id:\"building-the-image\",children:[(0,e.jsx)(n.a,{href:\"#building-the-image\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Building the image\"]}),(0,e.jsx)(n.p,{children:\"Now we\\u2019re ready to build the Distroless image with Bazel:\"}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight language-sh\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`bazelisk build //...\n`})})}),(0,e.jsx)(n.p,{children:\"If the build succeeds, you\\u2019ll find two OCI images created:\"}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`$ ls bazel-bin/static_nonroot_arm64_debian13\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`blobs      index.json oci-layout\n`})]})}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-sh\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`$ ls bazel-bin/static_root_arm64_debian13\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`blobs      index.json oci-layout\n`})]})}),(0,e.jsx)(n.p,{children:\"You can load an OCI image into the Docker daemon using Skopeo:\"}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight language-sh\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`brew install skopeo\n`})})}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight language-sh\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`skopeo copy oci:./bazel-bin/static_nonroot_arm64_debian13 docker-daemon:my-distroless-image:stable\n`})})}),(0,e.jsxs)(n.h2,{id:\"conclusion\",children:[(0,e.jsx)(n.a,{href:\"#conclusion\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Conclusion\"]}),(0,e.jsx)(n.p,{children:\"The Bitnami Minideb image is used as the base image in the Bitnami project. I learned that it is built using custom scripts on top of the debootstrap package. By reviewing these scripts, you can see which Debian packages are included.\"}),(0,e.jsx)(n.p,{children:\"Google\\u2019s Distroless image goes even further by including an even smaller set of Debian packages. I took a closer look at how Distroless images can be generated with Bazel. Based on this understanding, I will try replacing the Minideb image with a Distroless image.\"})]})}}var _=f;return y;})();\n;return Component;","toc":[{"value":"Understanding Bitnami Mindeb Image","url":"#understanding-bitnami-mindeb-image","depth":2},{"value":"Which packages get installed during debootstrap?","url":"#which-packages-get-installed-during-debootstrap","depth":3},{"value":"The work_out_debs function","url":"#the-work_out_debs-function","depth":3},{"value":"Bitnami’s customization","url":"#bitnamis-customization","depth":3},{"value":"Understanding Distroless Image","url":"#understanding-distroless-image","depth":2},{"value":"Setting up the Bazel workspace","url":"#setting-up-the-bazel-workspace","depth":3},{"value":"External Bazel modules","url":"#external-bazel-modules","depth":3},{"value":"Configuring Debian repositories","url":"#configuring-debian-repositories","depth":3},{"value":"Defining the base image","url":"#defining-the-base-image","depth":3},{"value":"Variables file","url":"#variables-file","depth":3},{"value":"Adding packages to the image","url":"#adding-packages-to-the-image","depth":3},{"value":"BUILD file","url":"#build-file","depth":3},{"value":"Building the image","url":"#building-the-image","depth":3},{"value":"Conclusion","url":"#conclusion","depth":2}],"frontMatter":{"readingTime":{"text":"13 min read","minutes":12.84,"time":770400,"words":2568},"slug":"20250824-bazel","fileName":"20250824-bazel.md","title":"Understanding how to build Bitnami Mindeb image and Google Distroless image","date":"2025-08-24T00:00:00.000Z","tags":["bazel","security"],"images":["/static/images/thumbnail/distroless.png"],"summary":"Recently, Bitnami announced that secure container images would only be available under a paid plan, and that they would stop maintaining most of their previous images, except for a few open-source projects. Bitnami container images are based on the minideb image, which includes fewer packages than a standard Debian image. I started wondering whether I could replace this with a Distroless image built using Bazel and maintain it myself.This blog explains how minideb and Distroless images are built."}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.15,"time":9000,"words":30},"slug":["default"],"fileName":"default.md","name":"Jay","avatar":"profile.png","occupation":"Software Engineer","date":null}],"prev":{"title":"Automating Semantic Versioning and Releases in Node.js with Conventional Commits","date":"2025-08-10T00:00:00.000Z","tags":["nodejs","dev"],"images":["/static/images/thumbnail/conventional-commits.png"],"summary":"I introduced several open-source tools that help ensure everyone follows the same commit message conventions and make it easy to manage versions and release notes based on those consistent messages.","slug":"20250810-conventional-commits"},"next":null},"__N_SSG":true}